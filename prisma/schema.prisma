generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["referentialIntegrity"]
}

datasource db {
  provider     = "mysql"
  url          = env("DATABASE_URL")
  relationMode = "prisma"
}

// TODO:
// -> Add image support

model PriceHistory {
  pid        String   @id @default(uuid()) /// Price Entry ID
  created_at DateTime @default(now()) /// Created At

  post    Post    @relation(fields: [postPid], references: [id])
  postPid String
  price   Float
  eur     Boolean

  //   author   User   @relation("CreatedBy", fields: [authorId], references: [uid])
  // authorId String
}

model User {
  uid           String  @id @default(uuid())
  firstName     String
  lastName      String?
  email         String  @unique
  passwordHash  String
  userAuthToken String  @unique

  created_at   DateTime    @default(now())
  updated_at   DateTime    @updatedAt
  role         Role        @default(USER)
  account_type AccountType @default(Personal)

  sellerInfo SellerInformation?

  posts Post[] @relation("CreatedBy")
  likes Post[]
}

model SellerInformation {
  bid     String @id @default(uuid())
  user    User   @relation(fields: [userUid], references: [uid])
  userUid String @unique

  status SellerStatus @default(Normal)

  profilePicture String?
  coverPicture   String?

  mainColor String?
}

/// Post Model - Contains all information on a post made on the page
model Post {
  id         String   @id @default(uuid()) /// Post ID
  created_at DateTime @default(now()) /// Created At
  archived   Boolean  @default(false) /// If post is archived
  post_views Int      @default(0) /// How many times has the post been viewed
  post_likes Int      @default(0) /// How many times the post has been liked

  // link post to one Author Only
  author   User   @relation("CreatedBy", fields: [authorId], references: [uid])
  authorId String

  // Link users who like a post
  // likedBy User   @relation(name: "LikedBy", fields: [likerId], references: [uid])

  // ->
  // likedBy User[] @relation(references: [uid])

  // likerId String

  title       String
  description String

  // Array of Price Entries
  // -> Can be used to calculate discounts based on last change 24 Hours
  // -> Could be Premium Feature - View Price History ...
  priceHistory PriceHistory[]

  category String
  city     Cities
  country  Countries

  tags Tag[]

  postLikes User[]
}

model Tag {
  id    Int    @id @default(autoincrement())
  name  String
  value String
  posts Post[]
}

// ?ENUM DECLARATION
// -----------------------------------------

enum Role {
  USER
  ADMIN
}

enum AccountType {
  Personal
  Seller
}

enum SellerStatus {
  Normal
  Verified
}

enum Countries {
  Albania
  Kosovo
}

enum Cities {
  BajramCurri
  Ballsh
  Belsh
  Berat
  Bilisht
  Bulqize
  Burrel
  Cerrik
  Corovode
  Delvine
  Divjake
  Durres
  Erseke
  Fier
  FusheKruje
  Gjirokaster
  Gramsh
  Kamez
  Kavaje
  Korce
  Kruje
  Krume
  Kucove
  Kukes
  Lac
  Lezhe
  Libonik
  Librazhd
  Lushnje
  Mamurras
  Patos
  Peqin
  Permet
  Peshkopi
  Pogradec
  Prrenjas
  Puke
  Roskovec
  Rreshen
  Rrogozhine
  Sarande
  Shengjin
  Shijak
  Shkoder
  Sukth
  Tepelene
  Tirane
  Vlore
}
